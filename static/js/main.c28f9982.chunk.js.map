{"version":3,"sources":["state/BoardEventsProvider.tsx","state/helpers.ts","state/MatrixStateProvider.tsx","state/CellThemeProvider.tsx","components/Cell/Cell.tsx","components/Matrix/Matrix.tsx","state/UIThemeProvider.tsx","components/UI/Card/Card.tsx","containers/Board/Board.tsx","state/GameStatusProvider.tsx","hooks/useInterval.tsx","components/UI/Button/Button.tsx","components/UI/helpers.ts","components/UI/Slider/Slider.tsx","containers/Controls/Controls.tsx","components/UI/Backdrop/Backdrop.tsx","components/UI/TooltipContainer/TooltipContainer.tsx","components/UI/CellThemeSelectorIcon/CellThemeSelectorIcon.tsx","components/UI/UIThemeSelectorIcon/UIThemeSelectorIcon.tsx","containers/ThemeSelector/ThemeSelector.tsx","App.tsx","index.tsx","App.module.scss","components/Matrix/Matrix.module.scss","components/UI/Button/Button.module.scss","components/UI/Slider/Slider.module.scss","components/UI/TooltipContainer/TooltipContainer.module.scss","containers/Controls/Controls.module.scss","containers/ThemeSelector/ThemeSelector.module.scss","components/Cell/Cell.module.scss","components/UI/Card/Card.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/CellThemeSelectorIcon/CellThemeSelectorIcon.module.scss","components/UI/UIThemeSelectorIcon/UIThemeSelectorIcon.module.scss"],"names":["boardEventsContext","createContext","filling","setFilling","value","clearing","setClearing","BoardEventsProvider","children","useState","Provider","shouldLive","board","x","y","isAlive","numberOfAliveNeighbors","getNumberOfAliveNeighbors","coord","aliveNeighbors","Array","minX","maxX","minY","maxY","length","i","j","push","filter","Boolean","matrixStateContext","matrix","setMatrix","newMatrix","updateMatrix","shouldvalidateSteadyState","setCellValue","coordinate","getCellValue","randomizeMatrix","clearMatrix","steadyState","MatrixStateProvider","setSteadyState","validateSteadyState","oldMatrix","matches","compare","updatedMatrix","map","row","cell","matrixClone","cloneDeep","forEach","aliveRandomness","Math","random","getRandomBool","themeMap","default","filledCell","border","honey","cellThemeContext","cellColor","setCellColor","color","cellFilledColor","setCellFilledColor","cellBorderColor","setCellBorderColor","CellThemeProvider","Cell","filledInitialState","filled","setFilled","clicking","setClicking","useContext","updateFillValue","cellValueState","useEffect","undefined","test-id","className","classes","style","borderColor","backgroundColor","onMouseDown","onMouseUp","onMouseOver","onMouseLeave","Matrix","rowsNumber","rows","columnsNumber","columns","fill","el","rowIdx","colIdx","themes","background","textColor","cards","boxShadowColor","buttons","bg","text","danger","success","warning","uiThemeContext","themeIndex","setThemeIndex","index","UIThemeProvider","createStyles","boxShadow","Card","card","Board","gameStatusContext","running","setRunning","currentGeneration","resetCurrentGeneration","increaseCurrentGeneration","GameStatusProvider","setCurrentGeneration","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","stylesMap","sm","height","width","fontSize","md","Button","size","upperCase","disabled","onClick","hover","setHover","mainColor","setMainColor","setTextColor","hoverMainColor","useMemo","hex","result","exec","r","parseInt","g","b","hexToRgb","styles","button","join","title","onMouseEnter","toString","toUpperCase","Slider","min","max","initialValue","onChange","setValue","container","type","slider","event","val","Number","target","Controls","updateSpeed","setUpdateSpeed","handleNextStep","controls_main","controls_row","generation_label","label","speed","generation","Backdrop","show","backdrop","tooltipContext","setShow","TooltipContainer","mode","showTooltip","setShowTooltip","showBackdrop","setShowBackdrop","trigger","main_container","Tooltip","main_tooltip","CellThemeSelectorIcon","innerColor","outerColor","css","theme_selector","UIThemeSelectorIcon","ThemeSelector","main","theme_option","marginBottom","theme_modal","o","icon_wrapper","Object","values","changeCellTheme","App","app","configuration_column","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0LASMA,EAAqBC,wBAAkC,CAC3DC,SAAS,EACTC,WAAY,SAACC,KACbC,UAAU,EACVC,YAAa,SAACF,OAyBDG,EAlBa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EACrBC,oBAAS,GADY,mBAC5CP,EAD4C,KACnCC,EADmC,OAEnBM,oBAAS,GAFU,mBAE5CJ,EAF4C,KAElCC,EAFkC,KAInD,OACE,cAACN,EAAmBU,SAApB,CACEN,MAAO,CACLF,UACAC,aACAE,WACAC,eALJ,SAOGE,K,yCC5BMG,EAAa,SAAC,EAAyBC,GAA4B,IAAnDC,EAAkD,EAAlDA,EAAGC,EAA+C,EAA/CA,EAAGC,EAA4C,EAA5CA,QAC3BC,EAAyBC,EAA0B,CAAEJ,IAAGC,KAAKF,GACnE,OAAIG,GACgC,IAA3BC,GAEyB,IAA3BA,GAGHC,EAA4B,SAACC,EAAmBN,GACpD,IAAMO,EAAiB,IAAIC,MAEvBC,EAAeH,EAAML,EAAI,EACzBS,EAAeJ,EAAML,EAAI,EAEzBU,EAAeL,EAAMJ,EAAI,EACzBU,EAAeN,EAAMJ,EAAI,EAGzBI,EAAML,IAAMD,EAAMa,OAAS,GAC7BJ,EAAOH,EAAML,EAAI,EACjBS,EAAOJ,EAAML,GACQ,IAAZK,EAAML,IAEfQ,EAAOH,EAAML,EACbS,EAAOJ,EAAML,EAAI,GAIfK,EAAMJ,IAAMF,EAAM,GAAGa,OAAS,GAChCF,EAAOL,EAAMJ,EAAI,EACjBU,EAAON,EAAMJ,GACQ,IAAZI,EAAMJ,IAEfS,EAAOL,EAAMJ,EACbU,EAAON,EAAMJ,EAAI,GAGnB,IAAK,IAAIY,EAAIL,EAAMK,GAAKJ,EAAMI,IAC5B,IAAK,IAAIC,EAAIJ,EAAMI,GAAKH,EAAMG,IAAK,CAAC,IAAD,EAC7BD,IAAMR,EAAML,GAAKc,IAAMT,EAAMJ,GACjCK,EAAeS,KAAf,UAAoBhB,EAAMe,GAAGD,UAA7B,aAAoB,EAAaX,SAGrC,OAAOI,EAAeU,OAAOC,SAASL,QC9BlCM,EAAqB9B,wBAAkC,CAC3D+B,OAAQ,CAAC,IACTC,UAAW,SAACC,KACZC,aAAc,SAACC,KACfC,aAAc,SAACC,EAAYlC,KAC3BmC,aAAc,SAACD,KACfE,gBAAiB,aACjBC,YAAa,aACbC,aAAa,IA2EAC,EApEa,SAAC,GAAyB,IAAvBnC,EAAsB,EAAtBA,SAAsB,EACvBC,mBAAiB,CAAC,KADK,mBAC5CuB,EAD4C,KACpCC,EADoC,OAEbxB,oBAAS,GAFI,mBAE5CiC,EAF4C,KAE/BE,EAF+B,KA4B7CC,EAAsB,SAACC,EAAmBZ,GAC9Ba,IAAQD,EACpBE,CAAQd,IACVU,GAAe,IAkBnB,OACE,cAACb,EAAmBrB,SAApB,CACEN,MAAO,CACL4B,SACAC,YACAE,aAzCe,SAACC,GACpB,IAAIM,EAAJ,CAGA,IAAMO,EAAgBjB,EAAOkB,KAAI,SAACC,GAAD,OAC/BA,EAAID,KAAI,SAACE,GAAD,mBAAC,eAAeA,GAAhB,IAAsBrC,QAASJ,EAAWyC,EAAMpB,WAGtDI,GACFS,EAAoBb,EAAQiB,GAG9BhB,EAAUgB,KA8BNZ,aAnDe,SAAC,EAAsBjC,GAAoB,IAAxCS,EAAuC,EAAvCA,EAAGC,EAAoC,EAApCA,EACzBkB,EAAOlB,GAAGD,GAAGE,QAAUX,EACvB6B,EAAUD,IAkDNO,aA/Ce,SAAC,GAA+C,IAAD,IAA5C1B,EAA4C,EAA5CA,EAAGC,EAAyC,EAAzCA,EACzB,iBAAOkB,EAAOlB,UAAd,iBAAO,EAAYD,UAAnB,aAAO,EAAgBE,SA+CnByB,gBAtBkB,WACtB,IAAMa,EAAcC,IAAUtB,GAC9BqB,EAAYE,SAAQ,SAACJ,GAAD,OAASA,EAAII,SAAQ,SAACH,GAAD,OAAWA,EAAKrC,QDrEhC,WAA6C,IAA5CyC,EAA2C,uDAAjB,GACtD,OAAOC,KAAKC,SAAWF,ECoE8CG,SACnE1B,EAAUoB,GACVT,GAAe,IAmBXH,YAhBc,WAClB,IAAMY,EAAcC,IAAUtB,GAC9BqB,EAAYE,SAAQ,SAACJ,GAAD,OAASA,EAAII,SAAQ,SAACH,GAAD,OAAWA,EAAKrC,SAAU,QACnEkB,EAAUoB,GACVT,GAAe,IAaXF,eATJ,SAWGlC,KC3FMoD,EAAW,CACtBC,QAAS,CACPT,KAAM,QACNU,WAAY,QACZC,OAAQ,WAEV,eAAgB,CACdX,KAAM,OACNU,WAAY,UACZC,OAAQ,QAEVC,MAAO,CACLZ,KAAM,UACNU,WAAY,UACZC,OAAQ,YAaNE,EAAmBhE,wBAAgC,CACvDiE,UAAW,QACXC,aAAc,SAACC,KACfC,gBAAiB,QACjBC,mBAAoB,SAACF,KACrBG,gBAAiB,OACjBC,mBAAoB,SAACJ,OA4BRK,EArBW,SAAC,GAAyB,IAAvBjE,EAAsB,EAAtBA,SAAsB,EACfC,mBAAS,SADM,mBAC1CyD,EAD0C,KAC/BC,EAD+B,OAEH1D,mBAAS,SAFN,mBAE1C4D,EAF0C,KAEzBC,EAFyB,OAGH7D,mBAAS,QAHN,mBAG1C8D,EAH0C,KAGzBC,EAHyB,KAKjD,OACE,cAACP,EAAiBvD,SAAlB,CACEN,MAAO,CACL8D,YACAC,eACAE,kBACAC,qBACAC,kBACAC,sBAPJ,SASGhE,K,iBCsCQkE,EAtEF,SAAC,GAAiD,IAPzC,EAOEC,EAAsC,EAA9CC,OAA4B/D,EAAkB,EAAlBA,EAAGC,EAAe,EAAfA,EAAe,EAChCL,mBAASkE,GADuB,mBACrDC,EADqD,KAC7CC,EAD6C,OAE5BpE,oBAAS,GAFmB,mBAErDqE,EAFqD,KAE3CC,EAF2C,OAIJC,qBAAWf,GAA3DM,EAJoD,EAIpDA,gBAAiBL,EAJmC,EAInCA,UAAWG,EAJwB,EAIxBA,gBAJwB,EAKLW,qBAAWhF,GAA1DE,EALoD,EAKpDA,QAASC,EAL2C,EAK3CA,WAAYE,EAL+B,EAK/BA,SAAUC,EALqB,EAKrBA,YALqB,EAMrB0E,qBAAWjD,GAA1CM,EANoD,EAMpDA,aAAcE,EANsC,EAMtCA,aAUhB0C,EAAkB,SAAC7E,GACvBiC,EAAa,CAAExB,IAAGC,KAAKV,GACvByE,EAAUzE,IA4BN8E,EAAiB3C,EAAa,CAAE1B,IAAGC,MAQzC,OANAqE,qBAAU,gBACeC,IAAnBF,GACFL,EAAUK,KAEX,CAACA,IAGF,qBACEG,UAAQ,OACRC,UAAWC,IAAQnC,KACnBoC,OAjEgB,EAiEI,CAClBjB,kBACAL,UAAWU,EAASP,EAAkBH,GAlErC,CACLuB,YAFqF,EAAjElB,gBAGpBmB,gBAHqF,EAAhDxB,YAqEnCyB,YAzCoB,WACtBZ,GAAY,GACZE,GAAiBL,IAwCfgB,UA1BkB,WACpBb,GAAY,GACR7E,EACFC,GAAW,GACFE,GACTC,GAAY,IAsBZuF,YAxDgB,YACbjB,GAAU1E,EACb+E,GAAgB,GACPL,GAAUvE,GACnB4E,GAAgB,IAqDhBa,aAvCqB,WACnBhB,IACEF,EACFzE,GAAW,GAEXG,GAAY,GAEdyE,GAAY,Q,iBCRHgB,EArCA,SAAC,GAAyD,IAAjDC,EAAgD,EAAtDC,KAA2BC,EAA2B,EAApCC,QAAoC,EAClCnB,qBAAWhF,GAAvCM,EAD8D,EAC9DA,YAAaH,EADiD,EACjDA,WACb8B,EAAc+C,qBAAWjD,GAAzBE,UACAsC,EAAoBS,qBAAWf,GAA/BM,gBAMFvC,EAAiB,CAAC,IAClBiE,EAAO,IAAI7E,MAAM4E,GAAYI,KAAK,MAAMlD,KAAI,SAACmD,EAAIC,GAErD,OADAtE,EAAOJ,KAAK,IAEV,qBAA2B0D,UAAWC,IAAQpC,IAA9C,SACG,IAAI/B,MAAM8E,GAAeE,KAAK,MAAMlD,KAAI,SAACmD,EAAIE,GAE5C,OADAvE,EAAOsE,GAAQ1E,KAAK,CAAEf,EAAG0F,EAAQzF,EAAGwF,EAAQvF,SAAS,IAC9C,cAAC,EAAD,CAAkC6D,QAAQ,EAAO/D,EAAG0F,EAAQzF,EAAGwF,GAA/D,UAAcA,EAAd,YAAwBC,QAHnC,cAAiBD,OAcrB,OALAnB,qBAAU,WACRlD,EAAUD,KAET,IAGD,qBACE8D,aAxBqB,WACvBxF,GAAY,GACZH,GAAW,IAuBTmF,UAAWC,IAAQvD,OACnBwD,MAAO,CAAEC,YAAalB,GAHxB,SAIG0B,KC5BMO,EAA+B,CAC1C,CACEC,WAAY,UACZC,UAAW,OACXC,MAAO,CAAEF,WAAY,UAAWG,eAAgB,QAChDC,QAAS,CACPhD,QAAS,CAAEiD,GAAI,OAAQC,KAAM,QAC7BC,OAAQ,CAAEF,GAAI,UAAWC,KAAM,QAC/BE,QAAS,CAAEH,GAAI,UAAWC,KAAM,QAChCG,QAAS,CAAEJ,GAAI,UAAWC,KAAM,UAGpC,CACEN,WAAY,OACZC,UAAW,UACXC,MAAO,CACLF,WAAY,OACZG,eAAgB,QAElBC,QAAS,CACPhD,QAAS,CAAEiD,GAAI,UAAWC,KAAM,QAChCC,OAAQ,CAAEF,GAAI,UAAWC,KAAM,QAC/BE,QAAS,CAAEH,GAAI,UAAWC,KAAM,QAChCG,QAAS,CAAEJ,GAAI,UAAWC,KAAM,WAUhCI,EAAiBlH,wBAA8B,CACnDmH,WAAY,EACZC,cAAe,SAACC,OAsBHC,EAfS,SAAC,GAAyB,IAAvB/G,EAAsB,EAAtBA,SAAsB,EACXC,mBAAS,GADE,mBACxC2G,EADwC,KAC5BC,EAD4B,KAG/C,OACE,cAACF,EAAezG,SAAhB,CACEN,MAAO,CACLgH,aACAC,iBAHJ,SAKG7G,K,iBC1DDgH,EAAe,SAACJ,GACpB,MAAO,CACL1B,gBAAiBc,EAAOY,GAAYT,MAAMF,WAC1CgB,UAAU,gBAAD,OAAkBjB,EAAOY,GAAYT,MAAMC,kBAazCc,EATF,SAAC,GAAgC,IAA9BlH,EAA6B,EAA7BA,SAAUgF,EAAmB,EAAnBA,MAChB4B,EAAepC,qBAAWmC,GAA1BC,WACR,OACE,qBAAK5B,MAAK,2BAAOA,GAAUgC,EAAaJ,IAAe9B,UAAWC,IAAQoC,KAA1E,SACGnH,KCFQoH,EAVD,WACZ,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAQzB,QAPA,GAOkBF,KANrB,UCGP4B,EAAoB5H,wBAAiC,CACzD6H,SAAS,EACTC,WAAY,SAAC3H,KACb4H,kBAAmB,EACnBC,uBAAwB,aACxBC,0BAA2B,eA6BdC,EAtBY,SAAC,GAAyB,IAAvB3H,EAAsB,EAAtBA,SAAsB,EACpBC,oBAAS,GADW,mBAC3CqH,EAD2C,KAClCC,EADkC,OAEAtH,mBAAS,GAFT,mBAE3CuH,EAF2C,KAExBI,EAFwB,KAOlD,OACE,cAACP,EAAkBnH,SAAnB,CACEN,MAAO,CACL0H,UACAC,WAAYA,EACZC,oBACAC,uBATyB,kBAAMG,EAAqB,IAUpDF,0BAT4B,kBAAME,EAAqBJ,EAAoB,KAG/E,SAQGxH,KClBQ6H,EAlBK,SAACC,EAAoBC,GACvC,IAAMC,EAAgBC,mBAEtBtD,qBAAU,WACRqD,EAAcE,QAAUJ,IACvB,CAACA,IAEJnD,qBAAU,WAIR,GAAc,OAAVoD,EAAgB,CAClB,IAAMI,EAAKC,aAJA,WAAO,IAAD,EACjB,UAAAJ,EAAcE,eAAd,cAAAF,KAG6BD,GAC7B,OAAO,kBAAMM,cAAcF,OAE5B,CAACJ,K,iBCUAO,EAAuB,CAC3BC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,QAC/CC,GAAI,CAAEH,OAAQ,OAAQC,MAAO,OAAQC,SAAU,QAC/CpC,GAAI,CAAEkC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,SAoElCE,EArDgC,SAAC,GAQlC,IAAD,IAPXC,YAOW,MAPJ,KAOI,EANXC,EAMW,EANXA,UACA9I,EAKW,EALXA,SACA+I,EAIW,EAJXA,SACAnF,EAGW,EAHXA,MACAoB,EAEW,EAFXA,MACAgE,EACW,EADXA,QAEQpC,EAAepC,qBAAWmC,GAA1BC,WADG,EAEe3G,oBAAS,GAFxB,mBAEJgJ,EAFI,KAEGC,EAFH,OAGuBjJ,mBAChC2D,EAAQoC,EAAOY,GAAYP,QAAQzC,GAAO0C,GAAKN,EAAOY,GAAYX,YAJzD,mBAGJkD,EAHI,KAGOC,EAHP,OAMuBnJ,mBAChC2D,EAAQoC,EAAOY,GAAYP,QAAQzC,GAAO2C,KAAOP,EAAOY,GAAYV,WAP3D,mBAMJA,EANI,KAMOmD,EANP,KAULC,EAAiBC,mBAAQ,WAAO,IAAD,EC/Df,SAACC,GACvB,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EACH,CACEE,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KAEzB,CAAEE,EAAG,EAAGE,EAAG,EAAGC,EAAG,GDwDCC,CAASZ,GAArBQ,EAD2B,EAC3BA,EAAGE,EADwB,EACxBA,EAAGC,EADqB,EACrBA,EACd,MAAM,QAAN,OAAeH,EAAf,YAAoBE,EAApB,YAAyBC,EAAzB,WACC,CAACX,IAEJxE,qBAAU,WACJf,IACFwF,EAAapD,EAAOY,GAAYP,QAAQzC,GAAO0C,IAC/C+C,EAAarD,EAAOY,GAAYP,QAAQzC,GAAO2C,SAGhD,CAACK,IAEJ,IAAMoD,EAAST,mBACb,kBA5CiB,SAAC,GAIwB,IAH5CV,EAG2C,EAH3CA,KACAM,EAE2C,EAF3CA,UACAjD,EAC2C,EAD3CA,UAEA,OAAO,2BACFoC,EAAUO,IADf,IAEE3D,gBAAiBiE,EACjBvF,MAAOsC,IAqCLc,CAAa,CACX6B,OACAM,UAAWF,EAAQK,EAAiBH,EACpCjD,gBAEJ,CAAC2C,EAAMM,EAAWjD,EAAWoD,EAAgBL,IAE/C,OACE,wBACEnE,UAAW,CAACC,IAAQkF,OAAQlB,EAAWhE,IAAQgE,SAAW,IAAImB,KAAK,KACnElF,MAAK,2BAAOgF,GAAWhF,GACvBmF,MAAOpB,EAAW,WAAa,GAC/BC,QAAS,kBAAOD,EAAW,KAAH,OAAUC,QAAV,IAAUA,OAAV,EAAUA,KAClCoB,aAAc,kBAAMlB,GAAS,IAC7B5D,aAAc,kBAAM4D,GAAS,IAN/B,SAOGJ,EAAS,OAAG9I,QAAH,IAAGA,OAAH,EAAGA,EAAUqK,WAAWC,cAAgBtK,K,iBE5DzCuK,EAtBA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,IAAKC,EAA+C,EAA/CA,IAA+C,IAA1CC,oBAA0C,MAA3BF,EAA2B,EAAtBG,EAAsB,EAAtBA,SAAsB,EAC1C1K,mBAASyK,GADiC,mBAC7D9K,EAD6D,KACtDgL,EADsD,KASpE,OACE,qBAAK9F,UAAWC,IAAQ8F,UAAxB,SACE,uBACEC,KAAK,QACLN,IAAKA,EACLC,IAAKA,EACL7K,MAAOA,EACPkF,UAAWC,IAAQgG,OACnBJ,SAde,SAACK,GACpB,IAAMC,EAAMC,OAAOF,EAAMG,OAAOvL,OAChCgL,EAASK,GACTN,EAASM,S,gBCmFEG,EA1FE,WAAO,IAAD,EACiBnL,mBAAS,GAD1B,mBACdoL,EADc,KACDC,EADC,OAQjB9G,qBAAW6C,GALbK,EAHmB,EAGnBA,0BACAD,EAJmB,EAInBA,uBACAF,EALmB,EAKnBA,WACAD,EANmB,EAMnBA,QACAE,EAPmB,EAOnBA,kBAPmB,EASkChD,qBAAWjD,GAA1DS,EATa,EASbA,gBAAiBL,EATJ,EASIA,aAAcM,EATlB,EASkBA,YAEjCsJ,EAAiB,WACrB7D,IACA/F,EAAa6F,EAAoB,KAAO,IAG1CK,EAAY0D,EAAgBjE,EAAU,IAAO+D,EAAc,MAS3D,OACE,cAAC,EAAD,UACE,sBAAKvG,UAAWC,IAAQyG,cAAxB,UACE,sBAAK1G,UAAWC,IAAQ0G,aAAxB,UACE,cAAC,EAAD,CACE3C,WAAS,EACTD,KAAK,KACLE,SAAUzB,EACVtC,MAAO,CAAEyD,MAAO,QAChB7E,MAAM,UACNoF,QAjBU,kBAAMzB,GAAW,IAW7B,mBASA,cAAC,EAAD,CACEuB,WAAS,EACTC,UAAWzB,EACXuB,KAAK,KACL7D,MAAO,CAAEyD,MAAO,QAChB7E,MAAM,SACNoF,QAzBS,kBAAMzB,GAAW,IAmB5B,qBAUF,sBAAKzC,UAAWC,IAAQ0G,aAAxB,UACE,cAAC,EAAD,CACE3C,WAAS,EACTD,KAAK,KACLE,SAAUzB,EACVtC,MAAO,CAAEyD,MAAO,QAChBO,QAASuC,EALX,kBAQA,cAAC,EAAD,CACEzC,WAAS,EACTD,KAAK,KACLE,SAAUzB,EACVtC,MAAO,CAAEyD,MAAO,QAChBO,QAAShH,EALX,uBAQA,cAAC,EAAD,CACE8G,WAAS,EACTD,KAAK,KACLE,SAAUzB,EACVtC,MAAO,CAAEyD,MAAO,QAChBO,QAlDU,WAClBvB,IACAxF,KA2CM,sBASF,qBAAK6C,UAAWC,IAAQ0G,aAAxB,SACE,cAAC,EAAD,CAAQjB,IAAK,EAAGC,IAAK,GAAIC,aAAcW,EAAaV,SAAUW,MAEhE,sBAAKxG,UAAW,CAACC,IAAQ0G,aAAc1G,IAAQ2G,kBAAkBxB,KAAK,KAAtE,UACE,sBAAKpF,UAAW,CAACC,IAAQ4G,MAAO5G,IAAQ6G,OAAO1B,KAAK,KAApD,4BACkBmB,EADlB,eAGA,sBAAKvG,UAAW,CAACC,IAAQ4G,MAAO5G,IAAQ8G,YAAY3B,KAAK,KAAzD,iCACuB1C,c,kCC/ElBsE,GAJE,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAM/C,EAAqB,EAArBA,QACxB,OAAO+C,EAAO,qBAAKjH,UAAWC,IAAQiH,SAAUhD,QAASA,IAAkB,MCQvEiD,GAAiBxM,wBAAc,CACnCsM,MAAM,EACNG,QAAS,SAACtM,OAGCuM,GAAmB,SAAC,GAAkD,IAAhDnM,EAA+C,EAA/CA,SAA+C,IAArCoM,YAAqC,MAA9B,QAA8B,IAC1CnM,oBAAS,GADiC,mBACzEoM,EADyE,KAC5DC,EAD4D,OAExCrM,oBAAS,GAF+B,mBAEzEsM,EAFyE,KAE3DC,EAF2D,KAI1ET,EAAO,SAACU,GACRA,IAAYL,GAASC,IACvBC,GAAe,GACF,UAATF,GACFI,GAAgB,KAgBtB,OACE,cAACP,GAAe/L,SAAhB,CAAyBN,MAAO,CAAEmM,KAAMM,EAAaH,QAASI,GAA9D,SACE,sBACExH,UAAWC,IAAQ2H,eACnB1D,QAAS,kBAAM+C,EAAK,UACpB3B,aAAc,kBAAM2B,EAAK,UACzBzG,aAAc,WAAW,UAXb8G,GACdE,GAAe,IAMf,UAKE,cAAC,GAAD,CAAUP,KAAMQ,EAAcvD,QAlBR,WAC1BwD,GAAgB,GAChBF,GAAe,MAiBVtM,QAWTmM,GAAiBQ,QALD,SAAC,GAAgC,IAA9B3M,EAA6B,EAA7BA,SAEjB,OADiBwE,qBAAWyH,IAApBF,KACM,qBAAKjH,UAAWC,IAAQ6H,aAAxB,SAAuC5M,IAAkB,MAK1DmM,U,mPCvDf,IAceU,GAde,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,WAAY9H,EAAkC,EAAlCA,YAAa+D,EAAqB,EAArBA,QAC9DhE,EAAQgI,aAAH,KACO/H,EAEM6H,EAGAC,GAIxB,OAAO,oBAAK/D,QAASA,EAASlE,UAAWC,KAAQkI,eAAgBD,IAAKhI,K,oBCPzDkI,GAVa,SAAC,GAA+B,IAA7BtJ,EAA4B,EAA5BA,MAAOoF,EAAqB,EAArBA,QACpC,OACE,qBACEA,QAASA,EACThE,MAAO,CAAEE,gBAAiBtB,GAC1BkB,UAAWC,KAAQkI,kB,mBCyEVE,GA3EO,WAAO,IAAD,EAQtB3I,qBAAWf,GANbC,EAFwB,EAExBA,UACAG,EAHwB,EAGxBA,gBACAE,EAJwB,EAIxBA,gBACAJ,EALwB,EAKxBA,aACAG,EANwB,EAMxBA,mBACAE,EAPwB,EAOxBA,mBAPwB,EAUYQ,qBAAWmC,GAAzCC,EAVkB,EAUlBA,WAAYC,EAVM,EAUNA,cAYpB,OACE,cAAC,EAAD,UACE,sBAAK/B,UAAWC,KAAQqI,KAAxB,UACE,sBACEtI,UAAWC,KAAQsI,aACnBrI,MAAO,CAAEC,YAAae,EAAOY,GAAYV,WAF3C,UAGE,qBAAKlB,MAAO,CAAEsI,aAAc,OAA5B,wBAEA,eAAC,GAAD,CAAkBlB,KAAK,QAAvB,UACE,cAAC,GAAD,CAAqBxI,MAAOoC,EAAOY,GAAYX,aAC/C,cAAC,GAAiB0G,QAAlB,UACE,qBAAK7H,UAAWC,KAAQwI,YAAxB,SACGvH,EAAOtD,KAAI,SAAC8K,EAAGtM,GAAJ,OACV,qBAAK4D,UAAWC,KAAQ0I,aAAxB,SACE,cAAC,GAAD,CACE7J,MAAO4J,EAAEvH,WACT+C,QAAS,kBAAMnC,EAAc3F,OAHUA,gBAWrD,sBAAK4D,UAAWC,KAAQsI,aAAxB,UACE,qBAAKrI,MAAO,CAAEsI,aAAc,OAA5B,wBACA,eAAC,GAAD,CAAkBlB,KAAK,QAAvB,UACE,cAAC,GAAD,CACEU,WAAYjJ,EACZkJ,WAAYrJ,EACZuB,YAAalB,IAEf,cAAC,GAAiB4I,QAAlB,UACE,qBAAK7H,UAAWC,KAAQwI,YAAxB,SACGG,OAAOC,OAAOvK,GAAUV,KAAI,SAAC8K,EAActM,GAAf,OAC3B,qBAAK4D,UAAWC,KAAQ0I,aAAxB,SACE,cAAC,GAAD,CACEzE,QAAS,kBA/CL,SACtBtF,EACAG,EACAE,GAEAJ,EAAaD,GACbI,EAAmBD,GACnBG,EAAmBD,GAwCc6J,CAAgBJ,EAAE5K,KAAM4K,EAAElK,WAAYkK,EAAEjK,SACvDuJ,WAAYU,EAAElK,WACdyJ,WAAYS,EAAE5K,KACdqC,YAAauI,EAAEjK,UALwBrC,sB,oBCvC9C2M,OApBf,WAAgB,IACNjH,EAAepC,qBAAWmC,GAA1BC,WACR,OACE,sBACE9B,UAAWC,KAAQ+I,IACnB9I,MAAO,CACLE,gBAAiBc,EAAOY,GAAYX,WACpCrC,MAAOoC,EAAOY,GAAYV,WAJ9B,UAME,qBAAKpB,UAAWC,KAAQ3E,MAAxB,SACE,cAAC,EAAD,MAEF,sBAAK0E,UAAWC,KAAQgJ,qBAAxB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,WCZRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,cAMVC,SAASC,eAAe,U,mBCrB1BC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,qBAAuB,oC,mBCA3FD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,mBCArDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,2B,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,aAAe,uCAAuC,eAAiB,2C,kBCAzFD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,aAAe,+BAA+B,MAAQ,wBAAwB,MAAQ,wBAAwB,WAAa,+B,kBCA7LD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,aAAe,oCAAoC,YAAc,mCAAmC,aAAe,oCAAoC,cAAgB,qCAAqC,MAAQ,+B,mBCAzQD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,eAAiB,gD,mBCAnCD,EAAOC,QAAU,CAAC,eAAiB,8C","file":"static/js/main.c28f9982.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\ninterface BoardEventsContext {\r\n  filling: boolean;\r\n  setFilling: (value: boolean) => void;\r\n  clearing: boolean;\r\n  setClearing: (value: boolean) => void;\r\n}\r\n\r\nconst boardEventsContext = createContext<BoardEventsContext>({\r\n  filling: false,\r\n  setFilling: (value: boolean) => {},\r\n  clearing: false,\r\n  setClearing: (value: boolean) => {},\r\n});\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst BoardEventsProvider = ({ children }: Props) => {\r\n  const [filling, setFilling] = useState(false);\r\n  const [clearing, setClearing] = useState(false);\r\n\r\n  return (\r\n    <boardEventsContext.Provider\r\n      value={{\r\n        filling,\r\n        setFilling,\r\n        clearing,\r\n        setClearing,\r\n      }}>\r\n      {children}\r\n    </boardEventsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { boardEventsContext };\r\nexport default BoardEventsProvider;\r\n","export const getRandomBool = (aliveRandomness: number = 0.5): boolean => {\r\n  return Math.random() > aliveRandomness;\r\n};\r\n\r\nexport const shouldLive = ({ x, y, isAlive }: Cell, board: Matrix): boolean => {\r\n  const numberOfAliveNeighbors = getNumberOfAliveNeighbors({ x, y }, board);\r\n  if (isAlive) {\r\n    return numberOfAliveNeighbors === 2 || numberOfAliveNeighbors === 3;\r\n  }\r\n  return numberOfAliveNeighbors === 3;\r\n};\r\n\r\nconst getNumberOfAliveNeighbors = (coord: Coordinate, board: Matrix): number => {\r\n  const aliveNeighbors = new Array<Boolean>();\r\n\r\n  let minX: number = coord.x - 1;\r\n  let maxX: number = coord.x + 1;\r\n\r\n  let minY: number = coord.y - 1;\r\n  let maxY: number = coord.y + 1;\r\n\r\n  // if is in the far right end\r\n  if (coord.x === board.length - 1) {\r\n    minX = coord.x - 1;\r\n    maxX = coord.x;\r\n  } else if (coord.x === 0) {\r\n    //if it is in the far left end\r\n    minX = coord.x;\r\n    maxX = coord.x + 1;\r\n  }\r\n\r\n  //if it is in the top\r\n  if (coord.y === board[0].length - 1) {\r\n    minY = coord.y - 1;\r\n    maxY = coord.y;\r\n  } else if (coord.y === 0) {\r\n    //if it is in the bottom\r\n    minY = coord.y;\r\n    maxY = coord.y + 1;\r\n  }\r\n\r\n  for (let i = minX; i <= maxX; i++) {\r\n    for (let j = minY; j <= maxY; j++) {\r\n      if (i === coord.x && j === coord.y) continue;\r\n      aliveNeighbors.push(board[j][i]?.isAlive);\r\n    }\r\n  }\r\n  return aliveNeighbors.filter(Boolean).length;\r\n};\r\n","import React, { createContext, useState } from 'react';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport matches from 'lodash/matches';\r\n\r\nimport { shouldLive, getRandomBool } from './helpers';\r\n\r\ninterface MatrixStateContext {\r\n  matrix: Matrix;\r\n  setMatrix: (newMatrix: Matrix) => void;\r\n  updateMatrix: (shouldvalidateSteadyState: boolean) => void;\r\n  setCellValue: (coordinate: Coordinate, value: boolean) => void;\r\n  getCellValue: (coordinate: Coordinate) => boolean | undefined;\r\n  randomizeMatrix: () => void;\r\n  clearMatrix: () => void;\r\n  steadyState: boolean;\r\n}\r\n\r\nconst matrixStateContext = createContext<MatrixStateContext>({\r\n  matrix: [[]],\r\n  setMatrix: (newMatrix) => {},\r\n  updateMatrix: (shouldvalidateSteadyState: boolean) => {},\r\n  setCellValue: (coordinate, value) => {},\r\n  getCellValue: (coordinate) => undefined,\r\n  randomizeMatrix: () => {},\r\n  clearMatrix: () => {},\r\n  steadyState: false,\r\n});\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst MatrixStateProvider = ({ children }: Props) => {\r\n  const [matrix, setMatrix] = useState<Matrix>([[]]);\r\n  const [steadyState, setSteadyState] = useState(false);\r\n\r\n  const setCellValue = ({ x, y }: Coordinate, value: boolean) => {\r\n    matrix[y][x].isAlive = value;\r\n    setMatrix(matrix);\r\n  };\r\n\r\n  const getCellValue = ({ x, y }: Coordinate): boolean | undefined => {\r\n    return matrix[y]?.[x]?.isAlive;\r\n  };\r\n\r\n  const updateMatrix = (shouldvalidateSteadyState: boolean) => {\r\n    if (steadyState) {\r\n      return;\r\n    }\r\n    const updatedMatrix = matrix.map((row) =>\r\n      row.map((cell) => ({ ...cell, isAlive: shouldLive(cell, matrix) }))\r\n    );\r\n\r\n    if (shouldvalidateSteadyState) {\r\n      validateSteadyState(matrix, updatedMatrix);\r\n    }\r\n\r\n    setMatrix(updatedMatrix);\r\n  };\r\n\r\n  const validateSteadyState = (oldMatrix: Matrix, newMatrix: Matrix) => {\r\n    const compare = matches(oldMatrix);\r\n    if (compare(newMatrix)) {\r\n      setSteadyState(true);\r\n    }\r\n  };\r\n\r\n  const randomizeMatrix = () => {\r\n    const matrixClone = cloneDeep(matrix);\r\n    matrixClone.forEach((row) => row.forEach((cell) => (cell.isAlive = getRandomBool())));\r\n    setMatrix(matrixClone);\r\n    setSteadyState(false);\r\n  };\r\n\r\n  const clearMatrix = () => {\r\n    const matrixClone = cloneDeep(matrix);\r\n    matrixClone.forEach((row) => row.forEach((cell) => (cell.isAlive = false)));\r\n    setMatrix(matrixClone);\r\n    setSteadyState(false);\r\n  };\r\n\r\n  return (\r\n    <matrixStateContext.Provider\r\n      value={{\r\n        matrix,\r\n        setMatrix,\r\n        updateMatrix,\r\n        setCellValue,\r\n        getCellValue,\r\n        randomizeMatrix,\r\n        clearMatrix,\r\n        steadyState,\r\n      }}>\r\n      {children}\r\n    </matrixStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport { matrixStateContext };\r\n// export type { Matrix };\r\nexport default MatrixStateProvider;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const themeMap = {\r\n  default: {\r\n    cell: '#18ab',\r\n    filledCell: '#afcc',\r\n    border: '#0a0a0a',\r\n  },\r\n  'black-yellow': {\r\n    cell: '#111',\r\n    filledCell: '#eeff00',\r\n    border: '#ccc',\r\n  },\r\n  honey: {\r\n    cell: '#F7A072',\r\n    filledCell: '#00A7E1',\r\n    border: '#D9E5D6',\r\n  },\r\n};\r\n\r\ninterface CellThemeContext {\r\n  cellColor: string;\r\n  setCellColor: (color: string) => void;\r\n  cellFilledColor: string;\r\n  setCellFilledColor: (color: string) => void;\r\n  cellBorderColor: string;\r\n  setCellBorderColor: (color: string) => void;\r\n}\r\n\r\nconst cellThemeContext = createContext<CellThemeContext>({\r\n  cellColor: '#18ab',\r\n  setCellColor: (color) => {},\r\n  cellFilledColor: '#afcc',\r\n  setCellFilledColor: (color) => {},\r\n  cellBorderColor: '#111',\r\n  setCellBorderColor: (color) => {},\r\n});\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst CellThemeProvider = ({ children }: Props) => {\r\n  const [cellColor, setCellColor] = useState('#18ab');\r\n  const [cellFilledColor, setCellFilledColor] = useState('#afcc');\r\n  const [cellBorderColor, setCellBorderColor] = useState('#111');\r\n\r\n  return (\r\n    <cellThemeContext.Provider\r\n      value={{\r\n        cellColor,\r\n        setCellColor,\r\n        cellFilledColor,\r\n        setCellFilledColor,\r\n        cellBorderColor,\r\n        setCellBorderColor,\r\n      }}>\r\n      {children}\r\n    </cellThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { cellThemeContext };\r\nexport default CellThemeProvider;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport { boardEventsContext } from 'state/BoardEventsProvider';\r\nimport { cellThemeContext } from 'state/CellThemeProvider';\r\nimport { matrixStateContext } from 'state/MatrixStateProvider';\r\nimport classes from './Cell.module.scss';\r\n\r\ninterface Props {\r\n  x: number;\r\n  y: number;\r\n  filled: boolean;\r\n}\r\n\r\ninterface CellTheme {\r\n  cellColor: string;\r\n  cellBorderColor: string;\r\n}\r\n\r\nconst createStyles = ({ cellBorderColor, cellColor }: CellTheme): React.CSSProperties => {\r\n  return {\r\n    borderColor: cellBorderColor,\r\n    backgroundColor: cellColor,\r\n  };\r\n};\r\n\r\nconst Cell = ({ filled: filledInitialState, x, y }: Props) => {\r\n  const [filled, setFilled] = useState(filledInitialState);\r\n  const [clicking, setClicking] = useState(false);\r\n\r\n  const { cellBorderColor, cellColor, cellFilledColor } = useContext(cellThemeContext);\r\n  const { filling, setFilling, clearing, setClearing } = useContext(boardEventsContext);\r\n  const { setCellValue, getCellValue } = useContext(matrixStateContext);\r\n\r\n  const handleHover = () => {\r\n    if (!filled && filling) {\r\n      updateFillValue(true);\r\n    } else if (filled && clearing) {\r\n      updateFillValue(false);\r\n    }\r\n  };\r\n\r\n  const updateFillValue = (value: boolean) => {\r\n    setCellValue({ x, y }, value);\r\n    setFilled(value);\r\n  };\r\n\r\n  const handleMouseDown = () => {\r\n    setClicking(true);\r\n    updateFillValue(!filled);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (clicking) {\r\n      if (filled) {\r\n        setFilling(true);\r\n      } else {\r\n        setClearing(true);\r\n      }\r\n      setClicking(false);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setClicking(false);\r\n    if (filling) {\r\n      setFilling(false);\r\n    } else if (clearing) {\r\n      setClearing(false);\r\n    }\r\n  };\r\n\r\n  const cellValueState = getCellValue({ x, y });\r\n\r\n  useEffect(() => {\r\n    if (cellValueState !== undefined) {\r\n      setFilled(cellValueState);\r\n    }\r\n  }, [cellValueState]);\r\n\r\n  return (\r\n    <div\r\n      test-id='cell'\r\n      className={classes.cell}\r\n      style={createStyles({\r\n        cellBorderColor,\r\n        cellColor: filled ? cellFilledColor : cellColor,\r\n      })}\r\n      onMouseDown={handleMouseDown}\r\n      onMouseUp={handleMouseUp}\r\n      onMouseOver={handleHover}\r\n      onMouseLeave={handleMouseLeave}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { boardEventsContext } from 'state/BoardEventsProvider';\r\nimport { matrixStateContext } from 'state/MatrixStateProvider';\r\nimport { cellThemeContext } from 'state/CellThemeProvider';\r\nimport Cell from 'components/Cell/Cell';\r\nimport classes from './Matrix.module.scss';\r\n\r\ninterface Props {\r\n  rows: number;\r\n  columns: number;\r\n}\r\n\r\nconst Matrix = ({ rows: rowsNumber, columns: columnsNumber }: Props) => {\r\n  const { setClearing, setFilling } = useContext(boardEventsContext);\r\n  const { setMatrix } = useContext(matrixStateContext);\r\n  const { cellBorderColor } = useContext(cellThemeContext);\r\n\r\n  const handleMouseLeave = () => {\r\n    setClearing(false);\r\n    setFilling(false);\r\n  };\r\n  const matrix: Matrix = [[]];\r\n  const rows = new Array(rowsNumber).fill(null).map((el, rowIdx) => {\r\n    matrix.push([]);\r\n    return (\r\n      <div key={`row-${rowIdx}`} className={classes.row}>\r\n        {new Array(columnsNumber).fill(null).map((el, colIdx) => {\r\n          matrix[rowIdx].push({ x: colIdx, y: rowIdx, isAlive: false });\r\n          return <Cell key={`${rowIdx}-${colIdx}`} filled={false} x={colIdx} y={rowIdx} />;\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMatrix(matrix);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      onMouseLeave={handleMouseLeave}\r\n      className={classes.matrix}\r\n      style={{ borderColor: cellBorderColor }}>\r\n      {rows}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n","import React, { createContext, useState } from 'react';\r\n\r\ntype Theme = {\r\n  background: string;\r\n  textColor: string;\r\n  cards: {\r\n    background: string;\r\n    boxShadowColor: string;\r\n  };\r\n  buttons: {\r\n    default: { bg: string; text: string };\r\n    danger: { bg: string; text: string };\r\n    success: { bg: string; text: string };\r\n    warning: { bg: string; text: string };\r\n  };\r\n};\r\n\r\nexport const themes: ReadonlyArray<Theme> = [\r\n  {\r\n    background: '#EEEEEE',\r\n    textColor: '#000',\r\n    cards: { background: '#d4d4d4', boxShadowColor: '#aaa' },\r\n    buttons: {\r\n      default: { bg: '#eee', text: '#fff' },\r\n      danger: { bg: '#d11128', text: '#fff' },\r\n      success: { bg: '#3ac346', text: '#fff' },\r\n      warning: { bg: '#bec33a', text: '#fff' },\r\n    },\r\n  },\r\n  {\r\n    background: '#000',\r\n    textColor: '#EEEEEE',\r\n    cards: {\r\n      background: '#444',\r\n      boxShadowColor: '#999',\r\n    },\r\n    buttons: {\r\n      default: { bg: '#d11128', text: '#fff' },\r\n      danger: { bg: '#d11128', text: '#fff' },\r\n      success: { bg: '#3ac346', text: '#fff' },\r\n      warning: { bg: '#bec33a', text: '#fff' },\r\n    },\r\n  },\r\n];\r\n\r\ninterface UIThemeContext {\r\n  themeIndex: number;\r\n  setThemeIndex: (index: number) => void;\r\n}\r\n\r\nconst uiThemeContext = createContext<UIThemeContext>({\r\n  themeIndex: 0,\r\n  setThemeIndex: (index) => {},\r\n});\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst UIThemeProvider = ({ children }: Props) => {\r\n  const [themeIndex, setThemeIndex] = useState(0);\r\n\r\n  return (\r\n    <uiThemeContext.Provider\r\n      value={{\r\n        themeIndex,\r\n        setThemeIndex,\r\n      }}>\r\n      {children}\r\n    </uiThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { uiThemeContext };\r\nexport default UIThemeProvider;\r\n","import React, { useContext } from 'react';\r\nimport { uiThemeContext, themes } from 'state/UIThemeProvider';\r\n\r\nimport classes from './Card.module.scss';\r\n\r\ninterface Props {\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst createStyles = (themeIndex: number): React.CSSProperties => {\r\n  return {\r\n    backgroundColor: themes[themeIndex].cards.background,\r\n    boxShadow: `5px 5px 10px ${themes[themeIndex].cards.boxShadowColor}`,\r\n  };\r\n};\r\n\r\nconst Card = ({ children, style }: Props) => {\r\n  const { themeIndex } = useContext(uiThemeContext);\r\n  return (\r\n    <div style={{ ...style, ...createStyles(themeIndex) }} className={classes.card}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport BoardEventsProvider from 'state/BoardEventsProvider';\r\nimport Matrix from 'components/Matrix/Matrix';\r\nimport Card from 'components/UI/Card/Card';\r\n\r\nconst COLUMNS = 55;\r\nconst ROWS = 55;\r\n\r\nconst Board = () => {\r\n  return (\r\n    <Card>\r\n      <BoardEventsProvider>\r\n        <Matrix columns={COLUMNS} rows={ROWS} />\r\n      </BoardEventsProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { createContext, useState } from 'react';\r\n\r\ninterface GameStatusContext {\r\n  running: boolean;\r\n  setRunning: (status: boolean) => void;\r\n  currentGeneration: number;\r\n  resetCurrentGeneration: () => void;\r\n  increaseCurrentGeneration: () => void;\r\n}\r\n\r\nconst gameStatusContext = createContext<GameStatusContext>({\r\n  running: false,\r\n  setRunning: (value: boolean) => {},\r\n  currentGeneration: 0,\r\n  resetCurrentGeneration: () => {},\r\n  increaseCurrentGeneration: () => {},\r\n});\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst GameStatusProvider = ({ children }: Props) => {\r\n  const [running, setRunning] = useState(false);\r\n  const [currentGeneration, setCurrentGeneration] = useState(0);\r\n\r\n  const resetCurrentGeneration = () => setCurrentGeneration(0);\r\n  const increaseCurrentGeneration = () => setCurrentGeneration(currentGeneration + 1);\r\n\r\n  return (\r\n    <gameStatusContext.Provider\r\n      value={{\r\n        running,\r\n        setRunning: setRunning,\r\n        currentGeneration,\r\n        resetCurrentGeneration,\r\n        increaseCurrentGeneration,\r\n      }}>\r\n      {children}\r\n    </gameStatusContext.Provider>\r\n  );\r\n};\r\n\r\nexport { gameStatusContext };\r\nexport default GameStatusProvider;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useInterval = (callback: Function, delay: number | null) => {\r\n  const savedCallback = useRef<Function>();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      savedCallback.current?.();\r\n    };\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import React, { useState, useContext, useMemo, useEffect } from 'react';\r\n\r\nimport { uiThemeContext, themes } from 'state/UIThemeProvider';\r\nimport { hexToRgb } from '../helpers';\r\nimport classes from './Button.module.scss';\r\ntype Size = 'sm' | 'md' | 'bg';\r\n\r\ninterface Props {\r\n  size?: Size;\r\n  upperCase?: boolean;\r\n  disabled?: boolean;\r\n  color?: Color;\r\n  onClick?: () => any;\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\ninterface ButtonStyleProps {\r\n  size: Size;\r\n  mainColor: string;\r\n  textColor: string;\r\n}\r\n\r\ntype StylesMap = {\r\n  [key in Size]: React.CSSProperties;\r\n};\r\n\r\nconst stylesMap: StylesMap = {\r\n  sm: { height: '24px', width: '64px', fontSize: '10px' },\r\n  md: { height: '28px', width: '64px', fontSize: '14px' },\r\n  bg: { height: '32px', width: '64px', fontSize: '18px' },\r\n};\r\n\r\nconst createStyles = ({\r\n  size,\r\n  mainColor,\r\n  textColor,\r\n}: ButtonStyleProps): React.CSSProperties => {\r\n  return {\r\n    ...stylesMap[size],\r\n    backgroundColor: mainColor,\r\n    color: textColor,\r\n  };\r\n};\r\n\r\nconst Button: React.FunctionComponent<Props> = ({\r\n  size = 'md',\r\n  upperCase,\r\n  children,\r\n  disabled,\r\n  color,\r\n  style,\r\n  onClick,\r\n}: Props) => {\r\n  const { themeIndex } = useContext(uiThemeContext);\r\n  const [hover, setHover] = useState(false);\r\n  const [mainColor, setMainColor] = useState<string>(\r\n    color ? themes[themeIndex].buttons[color].bg : themes[themeIndex].background\r\n  );\r\n  const [textColor, setTextColor] = useState<string>(\r\n    color ? themes[themeIndex].buttons[color].text : themes[themeIndex].textColor\r\n  );\r\n\r\n  const hoverMainColor = useMemo(() => {\r\n    const { r, g, b } = hexToRgb(mainColor);\r\n    return `rgba(${r},${g},${b},0.5)`;\r\n  }, [mainColor]);\r\n\r\n  useEffect(() => {\r\n    if (color) {\r\n      setMainColor(themes[themeIndex].buttons[color].bg);\r\n      setTextColor(themes[themeIndex].buttons[color].text);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeIndex]);\r\n\r\n  const styles = useMemo(\r\n    () =>\r\n      createStyles({\r\n        size,\r\n        mainColor: hover ? hoverMainColor : mainColor,\r\n        textColor,\r\n      }),\r\n    [size, mainColor, textColor, hoverMainColor, hover]\r\n  );\r\n  return (\r\n    <button\r\n      className={[classes.button, disabled ? classes.disabled : ''].join(' ')}\r\n      style={{ ...styles, ...style }}\r\n      title={disabled ? 'disabled' : ''}\r\n      onClick={() => (disabled ? null : onClick?.())}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}>\r\n      {upperCase ? children?.toString().toUpperCase() : children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const hexToRgb = (hex: string) => {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : { r: 1, g: 1, b: 1 };\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport classes from './Slider.module.scss';\r\n\r\ntype Props = {\r\n  min: number;\r\n  max: number;\r\n  initialValue: number;\r\n  onChange: (value: number) => void;\r\n};\r\n\r\nconst Slider = ({ min, max, initialValue = min, onChange }: Props) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = Number(event.target.value)\r\n    setValue(val);\r\n    onChange(val);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <input\r\n        type='range'\r\n        min={min}\r\n        max={max}\r\n        value={value}\r\n        className={classes.slider}\r\n        onChange={handleChange}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { gameStatusContext } from 'state/GameStatusProvider';\r\nimport { matrixStateContext } from 'state/MatrixStateProvider';\r\nimport useInterval from 'hooks/useInterval';\r\nimport Card from 'components/UI/Card/Card';\r\nimport Button from 'components/UI/Button/Button';\r\nimport Slider from 'components/UI/Slider/Slider';\r\nimport classes from './Controls.module.scss';\r\n\r\nconst Controls = () => {\r\n  const [updateSpeed, setUpdateSpeed] = useState(1);\r\n  const {\r\n    increaseCurrentGeneration,\r\n    resetCurrentGeneration,\r\n    setRunning,\r\n    running,\r\n    currentGeneration,\r\n  } = useContext(gameStatusContext);\r\n  const { randomizeMatrix, updateMatrix, clearMatrix } = useContext(matrixStateContext);\r\n\r\n  const handleNextStep = () => {\r\n    increaseCurrentGeneration();\r\n    updateMatrix(currentGeneration % 10 === 0);\r\n  };\r\n\r\n  useInterval(handleNextStep, running ? 1000 / updateSpeed : null);\r\n\r\n  const handleStart = () => setRunning(true);\r\n  const handleStop = () => setRunning(false);\r\n  const handleReset = () => {\r\n    resetCurrentGeneration();\r\n    clearMatrix();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div className={classes.controls_main}>\r\n        <div className={classes.controls_row}>\r\n          <Button\r\n            upperCase\r\n            size='md'\r\n            disabled={running}\r\n            style={{ width: '100%' }}\r\n            color='success'\r\n            onClick={handleStart}>\r\n            start\r\n          </Button>\r\n          <Button\r\n            upperCase\r\n            disabled={!running}\r\n            size='md'\r\n            style={{ width: '100%' }}\r\n            color='danger'\r\n            onClick={handleStop}>\r\n            stop\r\n          </Button>\r\n        </div>\r\n        <div className={classes.controls_row}>\r\n          <Button\r\n            upperCase\r\n            size='md'\r\n            disabled={running}\r\n            style={{ width: '100%' }}\r\n            onClick={handleNextStep}>\r\n            step\r\n          </Button>\r\n          <Button\r\n            upperCase\r\n            size='md'\r\n            disabled={running}\r\n            style={{ width: '100%' }}\r\n            onClick={randomizeMatrix}>\r\n            randomize\r\n          </Button>\r\n          <Button\r\n            upperCase\r\n            size='md'\r\n            disabled={running}\r\n            style={{ width: '100%' }}\r\n            onClick={handleReset}>\r\n            reset\r\n          </Button>\r\n        </div>\r\n        <div className={classes.controls_row}>\r\n          <Slider min={1} max={10} initialValue={updateSpeed} onChange={setUpdateSpeed} />\r\n        </div>\r\n        <div className={[classes.controls_row, classes.generation_label].join(' ')}>\r\n          <div className={[classes.label, classes.speed].join(' ')}>\r\n            Current speed: {updateSpeed} gens/sec\r\n          </div>\r\n          <div className={[classes.label, classes.generation].join(' ')}>\r\n            Current generation: {currentGeneration}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\ninterface Props {\r\n  onClick: () => void;\r\n  show?: boolean;\r\n}\r\n\r\nconst Backdrop = ({ show, onClick }: Props) => {\r\n  return show ? <div className={classes.backdrop} onClick={onClick}></div> : null;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\nimport classes from './TooltipContainer.module.scss';\r\nimport Backdrop from 'components/UI/Backdrop/Backdrop';\r\n\r\ntype Mode = 'click' | 'hover';\r\n\r\ninterface TooltipProps {\r\n  children?: React.ReactNode;\r\n  show?: boolean;\r\n}\r\n\r\ninterface ContainerProps {\r\n  children?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n  mode: Mode;\r\n}\r\n\r\nconst tooltipContext = createContext({\r\n  show: true,\r\n  setShow: (value: boolean) => {},\r\n});\r\n\r\nexport const TooltipContainer = ({ children, mode = 'click' }: ContainerProps) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showBackdrop, setShowBackdrop] = useState(false);\r\n\r\n  const show = (trigger: Mode) => {\r\n    if (trigger === mode && !showTooltip) {\r\n      setShowTooltip(true);\r\n      if (mode === 'click') {\r\n        setShowBackdrop(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = () => {\r\n    setShowBackdrop(false);\r\n    setShowTooltip(false);\r\n  };\r\n\r\n  const hide = (trigger: Mode) => {\r\n    if (trigger === mode) {\r\n      setShowTooltip(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tooltipContext.Provider value={{ show: showTooltip, setShow: setShowTooltip }}>\r\n      <div\r\n        className={classes.main_container}\r\n        onClick={() => show('click')}\r\n        onMouseEnter={() => show('hover')}\r\n        onMouseLeave={() => hide('hover')}>\r\n        <Backdrop show={showBackdrop} onClick={handleBackdropClick} />\r\n        {children}\r\n      </div>\r\n    </tooltipContext.Provider>\r\n  );\r\n};\r\n\r\nconst Tooltip = ({ children }: TooltipProps) => {\r\n  const { show } = useContext(tooltipContext);\r\n  return show ? <div className={classes.main_tooltip}>{children}</div> : null;\r\n};\r\n\r\nTooltipContainer.Tooltip = Tooltip;\r\n\r\nexport default TooltipContainer;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/react';\r\n\r\nimport classes from './CellThemeSelectorIcon.module.scss';\r\n\r\ninterface Props {\r\n  innerColor: string;\r\n  outerColor: string;\r\n  borderColor: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst CellThemeSelectorIcon = ({ innerColor, outerColor, borderColor, onClick }: Props) => {\r\n  const style = css`\r\n    border-color: ${borderColor};\r\n    &:before {\r\n      background-color: ${innerColor};\r\n    }\r\n    &:after {\r\n      background-color: ${outerColor};\r\n    }\r\n  `;\r\n\r\n  return <div onClick={onClick} className={classes.theme_selector} css={style} />;\r\n};\r\n\r\nexport default CellThemeSelectorIcon;\r\n","import classes from './UIThemeSelectorIcon.module.scss';\r\n\r\ninterface Props {\r\n  color: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst UIThemeSelectorIcon = ({ color, onClick }: Props) => {\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className={classes.theme_selector}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UIThemeSelectorIcon;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { cellThemeContext, themeMap } from 'state/CellThemeProvider';\r\nimport { uiThemeContext, themes } from 'state/UIThemeProvider';\r\nimport Card from 'components/UI/Card/Card';\r\nimport TooltipContainer from 'components/UI/TooltipContainer/TooltipContainer';\r\nimport CellThemeSelectorIcon from 'components/UI/CellThemeSelectorIcon/CellThemeSelectorIcon';\r\nimport UIThemeSelectorIcon from 'components/UI/UIThemeSelectorIcon/UIThemeSelectorIcon';\r\nimport classes from './ThemeSelector.module.scss';\r\n\r\nconst ThemeSelector = () => {\r\n  const {\r\n    cellColor,\r\n    cellFilledColor,\r\n    cellBorderColor,\r\n    setCellColor,\r\n    setCellFilledColor,\r\n    setCellBorderColor,\r\n  } = useContext(cellThemeContext);\r\n\r\n  const { themeIndex, setThemeIndex } = useContext(uiThemeContext);\r\n\r\n  const changeCellTheme = (\r\n    cellColor: string,\r\n    cellFilledColor: string,\r\n    cellBorderColor: string\r\n  ) => {\r\n    setCellColor(cellColor);\r\n    setCellFilledColor(cellFilledColor);\r\n    setCellBorderColor(cellBorderColor);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div className={classes.main}>\r\n        <div\r\n          className={classes.theme_option}\r\n          style={{ borderColor: themes[themeIndex].textColor }}>\r\n          <div style={{ marginBottom: '5px' }}>Main Theme</div>\r\n\r\n          <TooltipContainer mode='click'>\r\n            <UIThemeSelectorIcon color={themes[themeIndex].background} />\r\n            <TooltipContainer.Tooltip>\r\n              <div className={classes.theme_modal}>\r\n                {themes.map((o, i: number) => (\r\n                  <div className={classes.icon_wrapper} key={i}>\r\n                    <UIThemeSelectorIcon\r\n                      color={o.background}\r\n                      onClick={() => setThemeIndex(i)}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </TooltipContainer.Tooltip>\r\n          </TooltipContainer>\r\n        </div>\r\n        <div className={classes.theme_option}>\r\n          <div style={{ marginBottom: '5px' }}>Cell Theme</div>\r\n          <TooltipContainer mode='click'>\r\n            <CellThemeSelectorIcon\r\n              innerColor={cellFilledColor}\r\n              outerColor={cellColor}\r\n              borderColor={cellBorderColor}\r\n            />\r\n            <TooltipContainer.Tooltip>\r\n              <div className={classes.theme_modal}>\r\n                {Object.values(themeMap).map((o: CellTheme, i: number) => (\r\n                  <div className={classes.icon_wrapper} key={i}>\r\n                    <CellThemeSelectorIcon\r\n                      onClick={() => changeCellTheme(o.cell, o.filledCell, o.border)}\r\n                      innerColor={o.filledCell}\r\n                      outerColor={o.cell}\r\n                      borderColor={o.border}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </TooltipContainer.Tooltip>\r\n          </TooltipContainer>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ThemeSelector;\r\n","import React, { useContext } from 'react';\n\nimport Board from 'containers/Board/Board';\nimport Controls from 'containers/Controls/Controls';\nimport ThemeSelector from 'containers/ThemeSelector/ThemeSelector';\nimport { uiThemeContext, themes } from 'state/UIThemeProvider';\nimport classes from 'App.module.scss';\n\nfunction App() {\n  const { themeIndex } = useContext(uiThemeContext);\n  return (\n    <div\n      className={classes.app}\n      style={{\n        backgroundColor: themes[themeIndex].background,\n        color: themes[themeIndex].textColor,\n      }}>\n      <div className={classes.board}>\n        <Board />\n      </div>\n      <div className={classes.configuration_column}>\n        <Controls />\n        <ThemeSelector />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport GameStatusprovider from 'state/GameStatusProvider';\nimport CellThemeProvider from 'state/CellThemeProvider';\nimport UIThemeProvider from 'state/UIThemeProvider';\nimport MatrixStateProvider from 'state/MatrixStateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameStatusprovider>\n      <MatrixStateProvider>\n        <CellThemeProvider>\n          <UIThemeProvider>\n            <App />\n          </UIThemeProvider>\n        </CellThemeProvider>\n      </MatrixStateProvider>\n    </GameStatusprovider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Rc-k\",\"board\":\"App_board__26JDW\",\"configuration_column\":\"App_configuration_column__YLD4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Matrix_row__3I_1m\",\"matrix\":\"Matrix_matrix__3IVwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3IC3S\",\"disabled\":\"Button_disabled__3H7lH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Slider_container__DBRk6\",\"slider\":\"Slider_slider__1JmPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_tooltip\":\"TooltipContainer_main_tooltip__1BDgZ\",\"main_container\":\"TooltipContainer_main_container__SMfuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls_main\":\"Controls_controls_main__1KCrV\",\"controls_row\":\"Controls_controls_row__D6Sr1\",\"label\":\"Controls_label__3u_ik\",\"speed\":\"Controls_speed__1OWUf\",\"generation\":\"Controls_generation__3MWuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ThemeSelector_main__1SBZU\",\"theme_option\":\"ThemeSelector_theme_option__2Syu7\",\"theme_modal\":\"ThemeSelector_theme_modal__AQwjq\",\"icon_wrapper\":\"ThemeSelector_icon_wrapper__37nJy\",\"ui_theme_text\":\"ThemeSelector_ui_theme_text__2txaF\",\"light\":\"ThemeSelector_light__11_Mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__3mY0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__hMDJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__2e_lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"CellThemeSelectorIcon_theme_selector__dGm1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"UIThemeSelectorIcon_theme_selector__23TMy\"};"],"sourceRoot":""}